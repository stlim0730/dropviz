<!DOCTYPE html>
<html>

  <head>
    <title>uSee-Data</title>
    
    <meta name='viewport' 
  content='width=device-width, minimum-scale=1.0, initial-scale=1.0, user-scalable=yes' />
    
    <script src='/bower_components/webcomponentsjs/webcomponents.js'></script>
    <script src='/public/js/jquery/jquery-1.11.2.min.js'></script>

    <link rel='import' href='/bower_components/core-header-panel/core-header-panel.html' />
    <link rel='import' href='/bower_components/core-toolbar/core-toolbar.html' />
    <link rel='import' href='/bower_components/paper-tabs/paper-tabs.html' />
    <link rel='import' href='/bower_components/paper-button/paper-button.html' />
    <link rel='import' href='/bower_components/core-icon-button/core-icon-button.html' />
    <link rel='import' href='/bower_components/core-transition/core-transition-css.html' />
    <link rel='import' href='/bower_components/core-overlay/core-overlay.html' />
    <link rel='import' href='/bower_components/google-signin/google-signin.html' />
    <link rel='import' href='/bower_components/google-signin/google-signin-aware.html' />

    <link href='http://fonts.googleapis.com/css?family=Lato:200,400,700' rel='stylesheet' type='text/css' />

    <style shim-shadowdom>

      html, body {
        height: 100%;
      }

      body {
        margin: 0;
        font-family: 'Lato', sans-serif;
        font-weight: 200;
      }

      core-header-panel {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-color: #eee;
      }

      .content {
        height: 1000px;
        background: linear-gradient(rgb(214, 227, 231), lightblue);
      }

      .sub-left {
        float: left;
        width: 30%;
        text-align: center;
      }

      .sub-right {
        float: right;
        width: 70%;
      }

    </style>
  </head>
  
  <body unresolved>
    <core-header-panel mode='waterfall-tall' tallClass='medium-tall'>
      
      <% include partials/header %>

      <div class='content'>
        <script>
          var metadata = <%-JSON.stringify(metadata)%>;
          var data = <%-JSON.stringify(data)%>;
          var chart_reqs = <%-JSON.stringify(chart_reqs)%>;
        </script>
        
        <div class='sub-left'>
          <% include partials/fieldSelector %>
          <% include partials/chartSelector %>
        </div>

        <div class='sub-right'>
          <% include partials/chart %>
          <!-- something comes later -->
        </div>
      </div>
    </core-header-panel>

    <script src='/public/js/vkbeautify/vkbeautify.js'></script>
    <script>
      // var svg;
      // function exportCode() {
        // var code;
        // svg = $('#chart > svg')[0];
        // $(svg).find('defs').remove();
        // $(svg).find().each(function (index, elem) {
        //   var cls = $(elem).attr('class');
        //   if (cls.indexOf('c3-') > -1) {
        //     // C3 styling is used.
        //   }
        //   else {
          
        //   }
        // });
        // Get rules from c3.css
        // for (var i = 0; i <= document.styleSheets.length - 1; i++) {
        //   if (document.styleSheets[i].href
        //     && document.styleSheets[i].href.indexOf('c3.min.css') !== -1) {
        //     if (document.styleSheets[i].rules !== undefined) {
        //       chartStyle = document.styleSheets[i].rules;
        //     }
        //     else {
        //       chartStyle = document.styleSheets[i].cssRules;
        //     }
        //   }
        // }

        // if (chartStyle !== null && chartStyle !== undefined) {
        //   // SVG doesn't use CSS visibility and opacity is an attribute, not a style property. Change hidden stuff to "display: none"
        //   var changeToDisplay = function() {
        //     if (angular.element(this).css('visibility') === 'hidden'
        //       || angular.element(this).css('opacity') === '0') {
        //       angular.element(this).css('display', 'none');
        //     }
        //   };

        //   // Inline apply all the CSS rules as inline
        //   for (i = 0; i < chartStyle.length; i++) {
        //     if (chartStyle[i].type === 1) {
        //       selector = chartStyle[i].selectorText;
        //       styles = makeStyleObject(chartStyle[i]);
        //       angular.element('svg *').each(changeToDisplay);
        //       angular.element(selector).not('.c3-chart path').css(styles);
        //     }

        //     /* C3 puts line colour as a style attribute, which gets overridden
        //        by the global ".c3 path, .c3 line" in c3.css. The .not() above
        //        prevents that, but now we need to set fill to "none" to prevent
        //        weird beziers.
        //        Which screws with pie charts and whatnot, ergo the is() callback.
        //     */
        //     angular.element('.c3-chart path')
        //       .filter(function(){
        //         return angular.element(this).css('fill') === 'none';
        //       })
        //       .attr('fill', 'none');

        //     angular.element('.c3-chart path')
        //       .filter(function(){
        //         return angular.element(this).css('fill') !== 'none';
        //       })
        //       .attr('fill', function(){
        //         return angular.element(this).css('fill');
        //       });
        //   }
        // }

      //   var serializer = new XMLSerializer();
      //   var svg_serial = serializer.serializeToString(svg);

      //   console.log(svg_serial);
      // }
    </script>
  </body>
</html>
